# Generated by Django 4.2.23 on 2025-09-14 13:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import helpdesk.models

def create_ticket_statuses(apps, schema_editor):
    TicketStatus = apps.get_model('helpdesk', 'TicketStatus')
    statuses = [
        {"code": "NEW", "name_nl": "Nieuw", "name_fr": "Nouveau", "name_en": "New", "order": 0, "default": True},
        {"code": "AWAITING_PICKUP", "name_nl": "Wacht op ophalen", "name_fr": "En attente de ramassage", "name_en": "Awaiting Pickup", "order": 10, "default": False},
        {"code": "ARRIVED_LAB", "name_nl": "Aangekomen in labo", "name_fr": "Arrivé au labo", "name_en": "Arrived at Lab", "order": 20, "default": False},
        {"code": "UNDER_INVESTIGATION", "name_nl": "Onderzoek", "name_fr": "En cours d'investigation", "name_en": "Under Investigation", "order": 30, "default": False},
        {"code": "MAINTENANCE", "name_nl": "Onderhoud", "name_fr": "Maintenance", "name_en": "Maintenance", "order": 40, "default": False},
        {"code": "UPDATE", "name_nl": "Update", "name_fr": "Mise à jour", "name_en": "Update", "order": 50, "default": False},
        {"code": "TESTING", "name_nl": "Testen", "name_fr": "Test", "name_en": "Testing", "order": 60, "default": False},
        {"code": "COMPLETED", "name_nl": "Klaar", "name_fr": "Terminé", "name_en": "Completed", "order": 70, "default": False},
        {"code": "CLOSED", "name_nl": "Gesloten", "name_fr": "Fermé", "name_en": "Closed", "order": 80, "default": False},
    ]

    for s in statuses:
        TicketStatus.objects.update_or_create(
            code=s["code"],
            defaults={"name": s["name_en"], "name_en": s["name_en"], "name_nl": s["name_nl"], "name_fr": s["name_fr"], "order": s["order"], "default": s["default"]}
        )

def add_maintenance_type(apps, schema_editor):
    TicketType = apps.get_model("helpdesk", "TicketType")
    TicketType.objects.update_or_create(
        code="maintenance",
        defaults={"name": "Maintenance", "name_en": "Maintenance", "name_nl": "Onderhoud", "name_fr": "Maintenance"}
    )



class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('radio', '0017_alter_subscription_options'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('helpdesk', '0004_remove_ticketmessage_ticket_delete_ticket_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('external_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('siamu_ticket', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tickets', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_tickets', to=settings.AUTH_USER_MODEL)),
                ('radio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='radio.radio')),
            ],
        ),
        migrations.CreateModel(
            name='TicketStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('name_nl', models.CharField(max_length=50, null=True)),
                ('name_fr', models.CharField(max_length=50, null=True)),
                ('name_en', models.CharField(max_length=50, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('default', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Ticket statuses',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='TicketType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('name_nl', models.CharField(max_length=50, null=True)),
                ('name_fr', models.CharField(max_length=50, null=True)),
                ('name_en', models.CharField(max_length=50, null=True)),
                ('code', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TicketLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('note', models.TextField(blank=True)),
                ('status_after', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_logs', to='helpdesk.ticketstatus')),
                ('status_before', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='previous_logs', to='helpdesk.ticketstatus')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='helpdesk.ticket')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.RunPython(create_ticket_statuses),
        migrations.RunPython(add_maintenance_type),
        migrations.AddField(
            model_name='ticket',
            name='status',
            field=models.ForeignKey(default=helpdesk.models.get_default_status, on_delete=django.db.models.deletion.PROTECT, related_name='tickets', to='helpdesk.ticketstatus'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='ticket_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='helpdesk.tickettype'),
        ),
    ]
